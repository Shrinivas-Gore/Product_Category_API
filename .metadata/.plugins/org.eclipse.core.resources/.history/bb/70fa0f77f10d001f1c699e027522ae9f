package com.app.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.support.DefaultMessageSourceResolvable;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.app.dto.ProductRequest;
import com.app.model.Product;
import com.app.service.ProductService;

import jakarta.validation.Valid;

@RestController
@RequestMapping("/api/products")
public class ProductController {

	@Autowired
	private ProductService productService;

	
	//handler which handle post request for creating product
	@PostMapping(
			consumes = { "application/json", "application/xml" }
			)
	public ResponseEntity<String> createProduct(@RequestBody @Valid ProductRequest request, BindingResult result) {
		if (result.hasErrors()) {
			String errorMessage = result.getFieldErrors().stream()
					.map(DefaultMessageSourceResolvable::getDefaultMessage).findFirst().orElse("Validation error");
			return new ResponseEntity<>(errorMessage, HttpStatus.BAD_REQUEST);
		}

		try {
			Product product = productService.save(request);
			return new ResponseEntity<>("Product added successfully", HttpStatus.CREATED);
		} catch (Exception e) {
			return new ResponseEntity<>(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);
		}
	}
}
